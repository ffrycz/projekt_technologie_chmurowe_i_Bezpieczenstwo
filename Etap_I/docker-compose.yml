version: "3.8"

services:
  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: $KC_DB_PASSWORD
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - keycloak-network

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    container_name: keycloak
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_HOSTNAME: localhost
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: $KC_ADMIN_PASSWORD
    ports:
      - 8080:8080
    depends_on:
      - keycloak-db
    networks:
      - keycloak-network

  frontend:
    image: ffrycz/projekt-frontend:1.0
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - keycloak
      - backend
    networks:
      - keycloak-network

  backend:
    image: ffrycz/projekt-backend:1.0
    container_name: flask-backend
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    depends_on:
      - keycloak
      - db
    networks:
      - keycloak-network
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:5000/health')",
        ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: posts_db
    volumes:
      - db-data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network

volumes:
  keycloak-db-data:
  db-data:

networks:
  keycloak-network:
  app-network:
